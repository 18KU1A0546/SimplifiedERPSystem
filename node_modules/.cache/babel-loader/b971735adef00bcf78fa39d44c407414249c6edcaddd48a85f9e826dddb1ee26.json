{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\ERP-System-with-React-No-Backend\\\\Simplified-ERP-System-with-React-No-Backend--main\\\\src\\\\Components\\\\Product.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst generateMockProduct = () => {\n  const id = Math.floor(Math.random() * 1000); // Generate a random ID\n  const names = ['Product A', 'Product B', 'Product C']; // Sample product names\n  const categories = ['Category 1', 'Category 2', 'Category 3']; // Sample categories\n  const randomIndex = Math.floor(Math.random() * names.length);\n  return {\n    id,\n    name: names[randomIndex],\n    category: categories[randomIndex],\n    price: Math.floor(Math.random() * 100) + 1,\n    // Generate a random price between 1 and 100\n    stockQuantity: Math.floor(Math.random() * 100) // Generate a random stock quantity\n  };\n};\nconst Product = ({\n  id: initialId,\n  name: initialName,\n  category: initialCategory,\n  price: initialPrice,\n  stockQuantity: initialStockQuantity,\n  onDelete\n}) => {\n  _s();\n  const [id, setId] = useState(initialId || null);\n  const [name, setName] = useState(initialName || '');\n  const [category, setCategory] = useState(initialCategory || '');\n  const [price, setPrice] = useState(initialPrice || 0);\n  const [stockQuantity, setStockQuantity] = useState(initialStockQuantity || 0);\n  const [isEditing, setIsEditing] = useState(false);\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n  const handleSave = () => {\n    // Perform validation if necessary\n\n    // Update the product data\n    // You can call an API here to update the product on the server\n    // For simplicity, just console.log the edited data\n    console.log({\n      id,\n      name,\n      category,\n      price,\n      stockQuantity\n    });\n    setIsEditing(false);\n  };\n  const handleDelete = () => {\n    // You can call an API here to delete the product on the server\n    // For simplicity, just console.log the product ID\n    console.log(\"Deleting product with ID:\", id);\n    onDelete(id);\n  };\n  if (!id) {\n    // Automatically generate data if ID is not provided\n    const mockProduct = generateMockProduct();\n    setId(mockProduct.id);\n    setName(mockProduct.name);\n    setCategory(mockProduct.category);\n    setPrice(mockProduct.price);\n    setStockQuantity(mockProduct.stockQuantity);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product\",\n    children: [isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: category,\n        onChange: e => setCategory(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: price,\n        onChange: e => setPrice(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: stockQuantity,\n        onChange: e => setStockQuantity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: stockQuantity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEdit,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDelete,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Product, \"il03wJetwhX4MohOceo0OKfpFzg=\");\n_c = Product;\nexport default Product;\nvar _c;\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","generateMockProduct","id","Math","floor","random","names","categories","randomIndex","length","name","category","price","stockQuantity","Product","initialId","initialName","initialCategory","initialPrice","initialStockQuantity","onDelete","_s","setId","setName","setCategory","setPrice","setStockQuantity","isEditing","setIsEditing","handleEdit","handleSave","console","log","handleDelete","mockProduct","className","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/ERP-System-with-React-No-Backend/Simplified-ERP-System-with-React-No-Backend--main/src/Components/Product.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst generateMockProduct = () => {\r\n  const id = Math.floor(Math.random() * 1000); // Generate a random ID\r\n  const names = ['Product A', 'Product B', 'Product C']; // Sample product names\r\n  const categories = ['Category 1', 'Category 2', 'Category 3']; // Sample categories\r\n  const randomIndex = Math.floor(Math.random() * names.length);\r\n  return {\r\n    id,\r\n    name: names[randomIndex],\r\n    category: categories[randomIndex],\r\n    price: Math.floor(Math.random() * 100) + 1, // Generate a random price between 1 and 100\r\n    stockQuantity: Math.floor(Math.random() * 100), // Generate a random stock quantity\r\n  };\r\n};\r\n\r\nconst Product = ({ id: initialId, name: initialName, category: initialCategory, price: initialPrice, stockQuantity: initialStockQuantity, onDelete }) => {\r\n  const [id, setId] = useState(initialId || null);\r\n  const [name, setName] = useState(initialName || '');\r\n  const [category, setCategory] = useState(initialCategory || '');\r\n  const [price, setPrice] = useState(initialPrice || 0);\r\n  const [stockQuantity, setStockQuantity] = useState(initialStockQuantity || 0);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const handleEdit = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    // Perform validation if necessary\r\n\r\n    // Update the product data\r\n    // You can call an API here to update the product on the server\r\n    // For simplicity, just console.log the edited data\r\n    console.log({\r\n      id,\r\n      name,\r\n      category,\r\n      price,\r\n      stockQuantity\r\n    });\r\n\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    // You can call an API here to delete the product on the server\r\n    // For simplicity, just console.log the product ID\r\n    console.log(\"Deleting product with ID:\", id);\r\n    onDelete(id);\r\n  };\r\n\r\n  if (!id) {\r\n    // Automatically generate data if ID is not provided\r\n    const mockProduct = generateMockProduct();\r\n    setId(mockProduct.id);\r\n    setName(mockProduct.name);\r\n    setCategory(mockProduct.category);\r\n    setPrice(mockProduct.price);\r\n    setStockQuantity(mockProduct.stockQuantity);\r\n  }\r\n\r\n  return (\r\n    <div className=\"product\">\r\n      {isEditing ? (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={category}\r\n            onChange={(e) => setCategory(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            value={price}\r\n            onChange={(e) => setPrice(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            value={stockQuantity}\r\n            onChange={(e) => setStockQuantity(e.target.value)}\r\n          />\r\n          <button onClick={handleSave}>Save</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div>{name}</div>\r\n          <div>{category}</div>\r\n          <div>{price}</div>\r\n          <div>{stockQuantity}</div>\r\n          <button onClick={handleEdit}>Edit</button>\r\n        </>\r\n      )}\r\n      <button onClick={handleDelete}>Delete</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}