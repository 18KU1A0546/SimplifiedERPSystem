{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\ERP-System-with-React-No-Backend\\\\Simplified-ERP-System-with-React-No-Backend--main\\\\src\\\\Components\\\\Product.js\",\n  _s = $RefreshSig$();\n// // // Product.js\n// // import React from 'react';\n// // import { Link } from 'react-router-dom';\n\n// // const Product = ({ product, onClick }) => {\n// //   return (\n// //     <div className=\"product-item\" onClick={() => onClick(product)}>\n// //       <h3 className=\"product-name\">{product.name}</h3>\n// //       <p className=\"product-details\">Category: {product.category}</p>\n// //       <p className=\"product-details\">Price: ${product.price}</p>\n// //       <p className=\"product-details\">Stock Quantity: {product.stockQuantity}</p>\n// //       <Link to={`/products/${product.id}`} className=\"product-link\">View Details</Link>\n// //     </div>\n// //   );\n// // };\n\n// // export default Product;\n\n// import React from 'react';\n// import { Link } from 'react-router-dom';\n\n// const Product = ({ product, onClick }) => {\n//   if (!product || !product.name) {\n//     return <div>Error: Product data is missing or invalid</div>;\n//   }\n\n//   return (\n//     <div className=\"product-item\" onClick={() => onClick(product)}>\n//       <h3 className=\"product-name\">{product.name}</h3>\n//       <p className=\"product-details\">Category: {product.category}</p>\n//       <p className=\"product-details\">Price: ${product.price}</p>\n//       <p className=\"product-details\">Stock Quantity: {product.stockQuantity}</p>\n//       <Link to={`/products/${product.id}`} className=\"product-link\">View Details</Link>\n//     </div>\n//   );\n// };\n\n// export default Product;\n\n// import React, { useState } from 'react';\n// import { Container, Table, Button, Modal, Form } from 'react-bootstrap';\n\n// function Product() {\n//     // State for managing products\n//     const [products, setProducts] = useState([\n//         { id: 1, name: 'Product 1', category: 'Category 1', price: 10, stockQuantity: 100 },\n//         { id: 2, name: 'Product 2', category: 'Category 2', price: 20, stockQuantity: 200 },\n//         { id: 3, name: 'Product 3', category: 'Category 3', price: 30, stockQuantity: 300 },\n//     ]);\n\n//     // State for managing modal\n//     const [showModal, setShowModal] = useState(false);\n//     const [formData, setFormData] = useState({});\n\n//     // Function to handle form submission for adding a new product\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         const newProduct = { id: products.length + 1, ...formData };\n//         setProducts([...products, newProduct]);\n//         setShowModal(false);\n//     };\n\n//     return (\n//         <Container fluid className=\"products-container\">\n//             <h1 className=\"products-heading\">Products Management</h1>\n//             <Button onClick={() => setShowModal(true)} className=\"mb-3\">Add New Product</Button>\n//             <Table striped bordered hover>\n//                 <thead>\n//                     <tr>\n//                         <th>Product ID</th>\n//                         <th>Name</th>\n//                         <th>Category</th>\n//                         <th>Price</th>\n//                         <th>Stock Quantity</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {products.map(product => (\n//                         <tr key={product.id}>\n//                             <td>{product.id}</td>\n//                             <td>{product.name}</td>\n//                             <td>{product.category}</td>\n//                             <td>${product.price}</td>\n//                             <td>{product.stockQuantity}</td>\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </Table>\n\n//             {/* Modal for adding new product */}\n//             <Modal show={showModal} onHide={() => setShowModal(false)}>\n//                 <Modal.Header closeButton>\n//                     <Modal.Title>Add New Product</Modal.Title>\n//                 </Modal.Header>\n//                 <Modal.Body>\n//                     <Form onSubmit={handleSubmit}>\n//                         <Form.Group controlId=\"name\">\n//                             <Form.Label>Product Name</Form.Label>\n//                             <Form.Control type=\"text\" placeholder=\"Enter product name\" onChange={(e) => setFormData({...formData, name: e.target.value})} />\n//                         </Form.Group>\n//                         <Form.Group controlId=\"category\">\n//                             <Form.Label>Category</Form.Label>\n//                             <Form.Control type=\"text\" placeholder=\"Enter category\" onChange={(e) => setFormData({...formData, category: e.target.value})} />\n//                         </Form.Group>\n//                         <Form.Group controlId=\"price\">\n//                             <Form.Label>Price</Form.Label>\n//                             <Form.Control type=\"number\" placeholder=\"Enter price\" onChange={(e) => setFormData({...formData, price: e.target.value})} />\n//                         </Form.Group>\n//                         <Form.Group controlId=\"stockQuantity\">\n//                             <Form.Label>Stock Quantity</Form.Label>\n//                             <Form.Control type=\"number\" placeholder=\"Enter stock quantity\" onChange={(e) => setFormData({...formData, stockQuantity: e.target.value})} />\n//                         </Form.Group>\n//                         <Button variant=\"primary\" type=\"submit\">\n//                             Submit\n//                         </Button>\n//                     </Form>\n//                 </Modal.Body>\n//             </Modal>\n//         </Container>\n//     );\n// }\n\n// export default Product;\n\n// import React, { useState } from 'react';\n// import { Container, Table, Button, Modal, Form } from 'react-bootstrap';\n// import './Products.css'; // Import custom CSS file for styling\n\n// function Product() {\n//     // State for managing products\n//     const [products, setProducts] = useState([\n//         { id: 1, name: 'Product 1', category: 'Category 1', price: 10, stockQuantity: 100 },\n//         { id: 2, name: 'Product 2', category: 'Category 2', price: 20, stockQuantity: 200 },\n//         { id: 3, name: 'Product 3', category: 'Category 3', price: 30, stockQuantity: 300 },\n//     ]);\n\n//     // State for managing modal\n//     const [showModal, setShowModal] = useState(false);\n//     const [formData, setFormData] = useState({});\n\n//     // Function to handle form submission for adding a new product\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         const newProduct = { id: products.length + 1, ...formData };\n//         setProducts([...products, newProduct]);\n//         setShowModal(false);\n//     };\n\n//     return (\n//         <Container fluid className=\"products-container\">\n//             <div className=\"products-header\">\n//                 <h1 className=\"products-heading\">Products Management</h1>\n//                 <Button onClick={() => setShowModal(true)} className=\"add-product-btn\">Add New Product</Button>\n//             </div>\n//             <Table striped bordered hover>\n//                 <thead>\n//                     <tr>\n//                         <th>Product ID</th>\n//                         <th>Name</th>\n//                         <th>Category</th>\n//                         <th>Price</th>\n//                         <th>Stock Quantity</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {products.map(product => (\n//                         <tr key={product.id}>\n//                             <td>{product.id}</td>\n//                             <td>{product.name}</td>\n//                             <td>{product.category}</td>\n//                             <td>${product.price}</td>\n//                             <td>{product.stockQuantity}</td>\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </Table>\n\n//             {/* Modal for adding new product */}\n//             <Modal show={showModal} onHide={() => setShowModal(false)}>\n//                 <Modal.Header closeButton>\n//                     <Modal.Title>Add New Product</Modal.Title>\n//                 </Modal.Header>\n//                 <Modal.Body>\n//                     <Form onSubmit={handleSubmit}>\n//                         <Form.Group controlId=\"name\">\n//                             <Form.Label>Product Name</Form.Label>\n//                             <Form.Control type=\"text\" placeholder=\"Enter product name\" onChange={(e) => setFormData({...formData, name: e.target.value})} />\n//                         </Form.Group>\n//                         <Form.Group controlId=\"category\">\n//                             <Form.Label>Category</Form.Label>\n//                             <Form.Control type=\"text\" placeholder=\"Enter category\" onChange={(e) => setFormData({...formData, category: e.target.value})} />\n//                         </Form.Group>\n//                         <Form.Group controlId=\"price\">\n//                             <Form.Label>Price</Form.Label>\n//                             <Form.Control type=\"number\" placeholder=\"Enter price\" onChange={(e) => setFormData({...formData, price: e.target.value})} />\n//                         </Form.Group>\n//                         <Form.Group controlId=\"stockQuantity\">\n//                             <Form.Label>Stock Quantity</Form.Label>\n//                             <Form.Control type=\"number\" placeholder=\"Enter stock quantity\" onChange={(e) => setFormData({...formData, stockQuantity: e.target.value})} />\n//                         </Form.Group>\n//                         <Button variant=\"primary\" type=\"submit\">\n//                             Submit\n//                         </Button>\n//                     </Form>\n//                 </Modal.Body>\n//             </Modal>\n//         </Container>\n//     );\n// }\n\n// export default Product;\n\n// import React, { useState } from 'react';\n// import { Container, Table, Button, Modal, Form } from 'react-bootstrap';\n// import './Products.css'; // Import Product component CSS\n\n// function Product() {\n//     // State for managing products\n//     const [products, setProducts] = useState([\n//         { id: 1, name: 'Product 1', category: 'Category 1', price: 10, stockQuantity: 100 },\n//         { id: 2, name: 'Product 2', category: 'Category 2', price: 20, stockQuantity: 200 },\n//         { id: 3, name: 'Product 3', category: 'Category 3', price: 30, stockQuantity: 300 },\n//     ]);\n\n//     // State for managing modal\n//     const [showModal, setShowModal] = useState(false);\n//     const [formData, setFormData] = useState({});\n\n//     // Function to handle form submission for adding a new product\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         const newProduct = { id: products.length + 1, ...formData };\n//         setProducts([...products, newProduct]);\n//         setShowModal(false);\n//     };\n\n//     return (\n//         <Container fluid className=\"products-container\">\n//             <h1 className=\"products-heading\">Products Management</h1>\n//             <Button onClick={() => setShowModal(true)} className=\"add-product-btn\">Add New Product</Button>\n//             <Table striped bordered hover>\n//                 <thead>\n//                     <tr>\n//                         <th>Product ID</th>\n//                         <th>Name</th>\n//                         <th>Category</th>\n//                         <th>Price</th>\n//                         <th>Stock Quantity</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {products.map(product => (\n//                         <tr key={product.id}>\n//                             <td>{product.id}</td>\n//                             <td>{product.name}</td>\n//                             <td>{product.category}</td>\n//                             <td>${product.price}</td>\n//                             <td>{product.stockQuantity}</td>\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </Table>\n\n//             {/* Modal for adding new product */}\n//             <Modal show={showModal} onHide={() => setShowModal(false)}>\n//                 <Modal.Header closeButton>\n//                     <Modal.Title>Add New Product</Modal.Title>\n//                 </Modal.Header>\n//                 <Modal.Body>\n//                     <Form onSubmit={handleSubmit}>\n//                         <Form.Group controlId=\"name\">\n//                             <Form.Label>Product Name</Form.Label>\n//                             <Form.Control type=\"text\" placeholder=\"Enter product name\" onChange={(e) => setFormData({...formData, name: e.target.value})} />\n//                         </Form.Group>\n//                         <Form.Group controlId=\"category\">\n//                             <Form.Label>Category</Form.Label>\n//                             <Form.Control type=\"text\" placeholder=\"Enter category\" onChange={(e) => setFormData({...formData, category: e.target.value})} />\n//                         </Form.Group>\n//                         <Form.Group controlId=\"price\">\n//                             <Form.Label>Price</Form.Label>\n//                             <Form.Control type=\"number\" placeholder=\"Enter price\" onChange={(e) => setFormData({...formData, price: e.target.value})} />\n//                         </Form.Group>\n//                         <Form.Group controlId=\"stockQuantity\">\n//                             <Form.Label>Stock Quantity</Form.Label>\n//                             <Form.Control type=\"number\" placeholder=\"Enter stock quantity\" onChange={(e) => setFormData({...formData, stockQuantity: e.target.value})} />\n//                         </Form.Group>\n//                         <Button variant=\"primary\" type=\"submit\">\n//                             Submit\n//                         </Button>\n//                     </Form>\n//                 </Modal.Body>\n//             </Modal>\n//         </Container>\n//     );\n// }\n\n// export default Product;\n\nimport React, { useState } from 'react';\nimport { Container, Table, Button, Modal, Form } from 'react-bootstrap';\nimport './Products.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Product() {\n  _s();\n  // State for managing products\n  const [products, setProducts] = useState([{\n    id: 1,\n    name: 'Product 1',\n    category: 'Category 1',\n    price: 10,\n    stockQuantity: 100\n  }, {\n    id: 2,\n    name: 'Product 2',\n    category: 'Category 2',\n    price: 20,\n    stockQuantity: 200\n  }, {\n    id: 3,\n    name: 'Product 3',\n    category: 'Category 3',\n    price: 30,\n    stockQuantity: 300\n  }]);\n\n  // State for managing modal\n  const [showModal, setShowModal] = useState(false);\n  const [formData, setFormData] = useState({});\n\n  // Function to handle form submission for adding a new product\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newProduct = {\n      id: products.length + 1,\n      ...formData\n    };\n    setProducts([...products, newProduct]);\n    setShowModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"products-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"products-heading\",\n      children: \"Products Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setShowModal(true),\n      className: \"add-product-btn\",\n      children: \"Add New Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Stock Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.stockQuantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 29\n          }, this)]\n        }, product.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: () => setShowModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add New Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter product name\",\n              onChange: e => setFormData({\n                ...formData,\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"category\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter category\",\n              onChange: e => setFormData({\n                ...formData,\n                category: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"price\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              placeholder: \"Enter price\",\n              onChange: e => setFormData({\n                ...formData,\n                price: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"stockQuantity\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Stock Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              placeholder: \"Enter stock quantity\",\n              onChange: e => setFormData({\n                ...formData,\n                stockQuantity: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            classNametype: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 331,\n    columnNumber: 9\n  }, this);\n}\n_s(Product, \"cSeJhMJiEqW4CLTwOKpNa38T3e8=\");\n_c = Product;\nexport default Product;\nvar _c;\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"names":["React","useState","Container","Table","Button","Modal","Form","jsxDEV","_jsxDEV","Product","_s","products","setProducts","id","name","category","price","stockQuantity","showModal","setShowModal","formData","setFormData","handleSubmit","e","preventDefault","newProduct","length","fluid","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","striped","bordered","hover","map","product","show","onHide","Header","closeButton","Title","Body","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","target","value","variant","classNametype","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/ERP-System-with-React-No-Backend/Simplified-ERP-System-with-React-No-Backend--main/src/Components/Product.js"],"sourcesContent":["// // // Product.js\r\n// // import React from 'react';\r\n// // import { Link } from 'react-router-dom';\r\n\r\n// // const Product = ({ product, onClick }) => {\r\n// //   return (\r\n// //     <div className=\"product-item\" onClick={() => onClick(product)}>\r\n// //       <h3 className=\"product-name\">{product.name}</h3>\r\n// //       <p className=\"product-details\">Category: {product.category}</p>\r\n// //       <p className=\"product-details\">Price: ${product.price}</p>\r\n// //       <p className=\"product-details\">Stock Quantity: {product.stockQuantity}</p>\r\n// //       <Link to={`/products/${product.id}`} className=\"product-link\">View Details</Link>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default Product;\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\n\r\n// const Product = ({ product, onClick }) => {\r\n//   if (!product || !product.name) {\r\n//     return <div>Error: Product data is missing or invalid</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"product-item\" onClick={() => onClick(product)}>\r\n//       <h3 className=\"product-name\">{product.name}</h3>\r\n//       <p className=\"product-details\">Category: {product.category}</p>\r\n//       <p className=\"product-details\">Price: ${product.price}</p>\r\n//       <p className=\"product-details\">Stock Quantity: {product.stockQuantity}</p>\r\n//       <Link to={`/products/${product.id}`} className=\"product-link\">View Details</Link>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Product;\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { Container, Table, Button, Modal, Form } from 'react-bootstrap';\r\n\r\n// function Product() {\r\n//     // State for managing products\r\n//     const [products, setProducts] = useState([\r\n//         { id: 1, name: 'Product 1', category: 'Category 1', price: 10, stockQuantity: 100 },\r\n//         { id: 2, name: 'Product 2', category: 'Category 2', price: 20, stockQuantity: 200 },\r\n//         { id: 3, name: 'Product 3', category: 'Category 3', price: 30, stockQuantity: 300 },\r\n//     ]);\r\n\r\n//     // State for managing modal\r\n//     const [showModal, setShowModal] = useState(false);\r\n//     const [formData, setFormData] = useState({});\r\n\r\n//     // Function to handle form submission for adding a new product\r\n//     const handleSubmit = (e) => {\r\n//         e.preventDefault();\r\n//         const newProduct = { id: products.length + 1, ...formData };\r\n//         setProducts([...products, newProduct]);\r\n//         setShowModal(false);\r\n//     };\r\n\r\n//     return (\r\n//         <Container fluid className=\"products-container\">\r\n//             <h1 className=\"products-heading\">Products Management</h1>\r\n//             <Button onClick={() => setShowModal(true)} className=\"mb-3\">Add New Product</Button>\r\n//             <Table striped bordered hover>\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <th>Product ID</th>\r\n//                         <th>Name</th>\r\n//                         <th>Category</th>\r\n//                         <th>Price</th>\r\n//                         <th>Stock Quantity</th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                     {products.map(product => (\r\n//                         <tr key={product.id}>\r\n//                             <td>{product.id}</td>\r\n//                             <td>{product.name}</td>\r\n//                             <td>{product.category}</td>\r\n//                             <td>${product.price}</td>\r\n//                             <td>{product.stockQuantity}</td>\r\n//                         </tr>\r\n//                     ))}\r\n//                 </tbody>\r\n//             </Table>\r\n\r\n//             {/* Modal for adding new product */}\r\n//             <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n//                 <Modal.Header closeButton>\r\n//                     <Modal.Title>Add New Product</Modal.Title>\r\n//                 </Modal.Header>\r\n//                 <Modal.Body>\r\n//                     <Form onSubmit={handleSubmit}>\r\n//                         <Form.Group controlId=\"name\">\r\n//                             <Form.Label>Product Name</Form.Label>\r\n//                             <Form.Control type=\"text\" placeholder=\"Enter product name\" onChange={(e) => setFormData({...formData, name: e.target.value})} />\r\n//                         </Form.Group>\r\n//                         <Form.Group controlId=\"category\">\r\n//                             <Form.Label>Category</Form.Label>\r\n//                             <Form.Control type=\"text\" placeholder=\"Enter category\" onChange={(e) => setFormData({...formData, category: e.target.value})} />\r\n//                         </Form.Group>\r\n//                         <Form.Group controlId=\"price\">\r\n//                             <Form.Label>Price</Form.Label>\r\n//                             <Form.Control type=\"number\" placeholder=\"Enter price\" onChange={(e) => setFormData({...formData, price: e.target.value})} />\r\n//                         </Form.Group>\r\n//                         <Form.Group controlId=\"stockQuantity\">\r\n//                             <Form.Label>Stock Quantity</Form.Label>\r\n//                             <Form.Control type=\"number\" placeholder=\"Enter stock quantity\" onChange={(e) => setFormData({...formData, stockQuantity: e.target.value})} />\r\n//                         </Form.Group>\r\n//                         <Button variant=\"primary\" type=\"submit\">\r\n//                             Submit\r\n//                         </Button>\r\n//                     </Form>\r\n//                 </Modal.Body>\r\n//             </Modal>\r\n//         </Container>\r\n//     );\r\n// }\r\n\r\n// export default Product;\r\n\r\n// import React, { useState } from 'react';\r\n// import { Container, Table, Button, Modal, Form } from 'react-bootstrap';\r\n// import './Products.css'; // Import custom CSS file for styling\r\n\r\n// function Product() {\r\n//     // State for managing products\r\n//     const [products, setProducts] = useState([\r\n//         { id: 1, name: 'Product 1', category: 'Category 1', price: 10, stockQuantity: 100 },\r\n//         { id: 2, name: 'Product 2', category: 'Category 2', price: 20, stockQuantity: 200 },\r\n//         { id: 3, name: 'Product 3', category: 'Category 3', price: 30, stockQuantity: 300 },\r\n//     ]);\r\n\r\n//     // State for managing modal\r\n//     const [showModal, setShowModal] = useState(false);\r\n//     const [formData, setFormData] = useState({});\r\n\r\n//     // Function to handle form submission for adding a new product\r\n//     const handleSubmit = (e) => {\r\n//         e.preventDefault();\r\n//         const newProduct = { id: products.length + 1, ...formData };\r\n//         setProducts([...products, newProduct]);\r\n//         setShowModal(false);\r\n//     };\r\n\r\n//     return (\r\n//         <Container fluid className=\"products-container\">\r\n//             <div className=\"products-header\">\r\n//                 <h1 className=\"products-heading\">Products Management</h1>\r\n//                 <Button onClick={() => setShowModal(true)} className=\"add-product-btn\">Add New Product</Button>\r\n//             </div>\r\n//             <Table striped bordered hover>\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <th>Product ID</th>\r\n//                         <th>Name</th>\r\n//                         <th>Category</th>\r\n//                         <th>Price</th>\r\n//                         <th>Stock Quantity</th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                     {products.map(product => (\r\n//                         <tr key={product.id}>\r\n//                             <td>{product.id}</td>\r\n//                             <td>{product.name}</td>\r\n//                             <td>{product.category}</td>\r\n//                             <td>${product.price}</td>\r\n//                             <td>{product.stockQuantity}</td>\r\n//                         </tr>\r\n//                     ))}\r\n//                 </tbody>\r\n//             </Table>\r\n\r\n//             {/* Modal for adding new product */}\r\n//             <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n//                 <Modal.Header closeButton>\r\n//                     <Modal.Title>Add New Product</Modal.Title>\r\n//                 </Modal.Header>\r\n//                 <Modal.Body>\r\n//                     <Form onSubmit={handleSubmit}>\r\n//                         <Form.Group controlId=\"name\">\r\n//                             <Form.Label>Product Name</Form.Label>\r\n//                             <Form.Control type=\"text\" placeholder=\"Enter product name\" onChange={(e) => setFormData({...formData, name: e.target.value})} />\r\n//                         </Form.Group>\r\n//                         <Form.Group controlId=\"category\">\r\n//                             <Form.Label>Category</Form.Label>\r\n//                             <Form.Control type=\"text\" placeholder=\"Enter category\" onChange={(e) => setFormData({...formData, category: e.target.value})} />\r\n//                         </Form.Group>\r\n//                         <Form.Group controlId=\"price\">\r\n//                             <Form.Label>Price</Form.Label>\r\n//                             <Form.Control type=\"number\" placeholder=\"Enter price\" onChange={(e) => setFormData({...formData, price: e.target.value})} />\r\n//                         </Form.Group>\r\n//                         <Form.Group controlId=\"stockQuantity\">\r\n//                             <Form.Label>Stock Quantity</Form.Label>\r\n//                             <Form.Control type=\"number\" placeholder=\"Enter stock quantity\" onChange={(e) => setFormData({...formData, stockQuantity: e.target.value})} />\r\n//                         </Form.Group>\r\n//                         <Button variant=\"primary\" type=\"submit\">\r\n//                             Submit\r\n//                         </Button>\r\n//                     </Form>\r\n//                 </Modal.Body>\r\n//             </Modal>\r\n//         </Container>\r\n//     );\r\n// }\r\n\r\n// export default Product;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { Container, Table, Button, Modal, Form } from 'react-bootstrap';\r\n// import './Products.css'; // Import Product component CSS\r\n\r\n// function Product() {\r\n//     // State for managing products\r\n//     const [products, setProducts] = useState([\r\n//         { id: 1, name: 'Product 1', category: 'Category 1', price: 10, stockQuantity: 100 },\r\n//         { id: 2, name: 'Product 2', category: 'Category 2', price: 20, stockQuantity: 200 },\r\n//         { id: 3, name: 'Product 3', category: 'Category 3', price: 30, stockQuantity: 300 },\r\n//     ]);\r\n\r\n//     // State for managing modal\r\n//     const [showModal, setShowModal] = useState(false);\r\n//     const [formData, setFormData] = useState({});\r\n\r\n//     // Function to handle form submission for adding a new product\r\n//     const handleSubmit = (e) => {\r\n//         e.preventDefault();\r\n//         const newProduct = { id: products.length + 1, ...formData };\r\n//         setProducts([...products, newProduct]);\r\n//         setShowModal(false);\r\n//     };\r\n\r\n//     return (\r\n//         <Container fluid className=\"products-container\">\r\n//             <h1 className=\"products-heading\">Products Management</h1>\r\n//             <Button onClick={() => setShowModal(true)} className=\"add-product-btn\">Add New Product</Button>\r\n//             <Table striped bordered hover>\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <th>Product ID</th>\r\n//                         <th>Name</th>\r\n//                         <th>Category</th>\r\n//                         <th>Price</th>\r\n//                         <th>Stock Quantity</th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                     {products.map(product => (\r\n//                         <tr key={product.id}>\r\n//                             <td>{product.id}</td>\r\n//                             <td>{product.name}</td>\r\n//                             <td>{product.category}</td>\r\n//                             <td>${product.price}</td>\r\n//                             <td>{product.stockQuantity}</td>\r\n//                         </tr>\r\n//                     ))}\r\n//                 </tbody>\r\n//             </Table>\r\n\r\n//             {/* Modal for adding new product */}\r\n//             <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n//                 <Modal.Header closeButton>\r\n//                     <Modal.Title>Add New Product</Modal.Title>\r\n//                 </Modal.Header>\r\n//                 <Modal.Body>\r\n//                     <Form onSubmit={handleSubmit}>\r\n//                         <Form.Group controlId=\"name\">\r\n//                             <Form.Label>Product Name</Form.Label>\r\n//                             <Form.Control type=\"text\" placeholder=\"Enter product name\" onChange={(e) => setFormData({...formData, name: e.target.value})} />\r\n//                         </Form.Group>\r\n//                         <Form.Group controlId=\"category\">\r\n//                             <Form.Label>Category</Form.Label>\r\n//                             <Form.Control type=\"text\" placeholder=\"Enter category\" onChange={(e) => setFormData({...formData, category: e.target.value})} />\r\n//                         </Form.Group>\r\n//                         <Form.Group controlId=\"price\">\r\n//                             <Form.Label>Price</Form.Label>\r\n//                             <Form.Control type=\"number\" placeholder=\"Enter price\" onChange={(e) => setFormData({...formData, price: e.target.value})} />\r\n//                         </Form.Group>\r\n//                         <Form.Group controlId=\"stockQuantity\">\r\n//                             <Form.Label>Stock Quantity</Form.Label>\r\n//                             <Form.Control type=\"number\" placeholder=\"Enter stock quantity\" onChange={(e) => setFormData({...formData, stockQuantity: e.target.value})} />\r\n//                         </Form.Group>\r\n//                         <Button variant=\"primary\" type=\"submit\">\r\n//                             Submit\r\n//                         </Button>\r\n//                     </Form>\r\n//                 </Modal.Body>\r\n//             </Modal>\r\n//         </Container>\r\n//     );\r\n// }\r\n\r\n// export default Product;\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { Container, Table, Button, Modal, Form } from 'react-bootstrap';\r\nimport './Products.css';\r\n\r\nfunction Product() {\r\n    // State for managing products\r\n    const [products, setProducts] = useState([\r\n        { id: 1, name: 'Product 1', category: 'Category 1', price: 10, stockQuantity: 100 },\r\n        { id: 2, name: 'Product 2', category: 'Category 2', price: 20, stockQuantity: 200 },\r\n        { id: 3, name: 'Product 3', category: 'Category 3', price: 30, stockQuantity: 300 },\r\n    ]);\r\n\r\n    // State for managing modal\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [formData, setFormData] = useState({});\r\n\r\n    // Function to handle form submission for adding a new product\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newProduct = { id: products.length + 1, ...formData };\r\n        setProducts([...products, newProduct]);\r\n        setShowModal(false);\r\n    };\r\n\r\n    return (\r\n        <Container fluid className=\"products-container\">\r\n            <h1 className=\"products-heading\">Products Management</h1>\r\n            <Button onClick={() => setShowModal(true)} className=\"add-product-btn\">Add New Product</Button>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Product ID</th>\r\n                        <th>Name</th>\r\n                        <th>Category</th>\r\n                        <th>Price</th>\r\n                        <th>Stock Quantity</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {products.map(product => (\r\n                        <tr key={product.id}>\r\n                            <td>{product.id}</td>\r\n                            <td>{product.name}</td>\r\n                            <td>{product.category}</td>\r\n                            <td>${product.price}</td>\r\n                            <td>{product.stockQuantity}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n\r\n            {/* Modal for adding new product */}\r\n            <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add New Product</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group controlId=\"name\">\r\n                            <Form.Label>Product Name</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter product name\" onChange={(e) => setFormData({...formData, name: e.target.value})} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"category\">\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter category\" onChange={(e) => setFormData({...formData, category: e.target.value})} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"price\">\r\n                            <Form.Label>Price</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Enter price\" onChange={(e) => setFormData({...formData, price: e.target.value})} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"stockQuantity\">\r\n                            <Form.Label>Stock Quantity</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Enter stock quantity\" onChange={(e) => setFormData({...formData, stockQuantity: e.target.value})} />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" classNametype=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Product;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}