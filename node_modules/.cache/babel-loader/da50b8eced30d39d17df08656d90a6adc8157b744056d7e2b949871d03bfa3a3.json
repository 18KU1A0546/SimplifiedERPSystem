{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\ERP-System-with-React-No-Backend\\\\Simplified-ERP-System-with-React-No-Backend--main\\\\src\\\\Components\\\\Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport './Calendar.css'; // Import calendar styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderCalendar = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(null);\n  const orders = [{\n    id: 1,\n    date: '2024-03-10',\n    sattus: 'De'\n  }, {\n    id: 2,\n    date: '2024-03-12',\n    status: 'Shipped'\n  }, {\n    id: 3,\n    date: '2024-03-13',\n    status: 'Delivered'\n  }];\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n  const getOrdersForDate = date => {\n    return orders.filter(order => order.date === date);\n  };\n  const renderOrdersForDate = () => {\n    if (!selectedDate) {\n      return 'Select a date to view orders.';\n    }\n    const ordersForDate = getOrdersForDate(selectedDate.toISOString().split('T')[0]);\n    if (ordersForDate.length === 0) {\n      return `No orders for ${selectedDate.toDateString()} are delivered.`;\n    }\n    return ordersForDate.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: `Order ${order.id}: ${order.status}`\n    }, order.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"order-calendar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"calendar-heading\",\n        children: \"Orders Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-container\",\n        children: /*#__PURE__*/_jsxDEV(Calendar, {\n          onChange: handleDateChange,\n          value: selectedDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"orders-list\",\n        children: renderOrdersForDate()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderCalendar, \"rhrbPH1/NtfhiyDl62tZ0yGffOM=\");\n_c = OrderCalendar;\nexport default OrderCalendar;\nvar _c;\n$RefreshReg$(_c, \"OrderCalendar\");","map":{"version":3,"names":["React","useState","Calendar","jsxDEV","_jsxDEV","OrderCalendar","_s","selectedDate","setSelectedDate","orders","id","date","sattus","status","handleDateChange","getOrdersForDate","filter","order","renderOrdersForDate","ordersForDate","toISOString","split","length","toDateString","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","value","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/ERP-System-with-React-No-Backend/Simplified-ERP-System-with-React-No-Backend--main/src/Components/Calendar.js"],"sourcesContent":["import React,{useState} from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport './Calendar.css'; // Import calendar styles\r\n\r\nconst OrderCalendar = () => {\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const orders = [\r\n    { id:1, date: '2024-03-10', sattus: 'De' },\r\n    { id: 2, date: '2024-03-12', status: 'Shipped' },\r\n    { id: 3, date: '2024-03-13', status: 'Delivered' },\r\n  ];\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const getOrdersForDate = (date) => {\r\n    return orders.filter((order) => order.date === date);\r\n  };\r\n\r\n  const renderOrdersForDate = () => {\r\n    if (!selectedDate) {\r\n      return 'Select a date to view orders.';\r\n    }\r\n\r\n    const ordersForDate = getOrdersForDate(selectedDate.toISOString().split('T')[0]);\r\n    if (ordersForDate.length === 0) {\r\n      return `No orders for ${selectedDate.toDateString()} are delivered.`;\r\n    }\r\n\r\n    return ordersForDate.map((order) => (\r\n      <div key={order.id}>{`Order ${order.id}: ${order.status}`}</div>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"order-calendar\">\r\n      <div className=\"calendar-content\">\r\n        <h2 className=\"calendar-heading\">Orders Calendar</h2>\r\n        <div className=\"calendar-container\">\r\n          <Calendar onChange={handleDateChange} value={selectedDate} />\r\n        </div>\r\n        <div className=\"orders-list\">\r\n          {renderOrdersForDate()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderCalendar;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}