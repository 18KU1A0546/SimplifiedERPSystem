{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\ERP-System-with-React-No-Backend\\\\Simplified-ERP-System-with-React-No-Backend--main\\\\src\\\\Components\\\\Calendar.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import Calendar from 'react-calendar';\n// import './Calendar.css'; // Import Calendar component CSS\n\n// function OrdersCalendar() {\n//     const [date, setDate] = useState(new Date());\n\n//     const handleDateChange = date => {\n//         setDate(date);\n//     };\n\n//     return (\n//         <div className=\"calendar-container\">\n//             <div className=\"calendar-header\">\n//                 <h2>Orders Calendar View</h2>\n//             </div>\n//             <Calendar\n//                 onChange={handleDateChange}\n//                 value={date}\n//             />\n//         </div>\n//     );\n// }\n\n// export default OrdersCalendar;\n\n// import React, { useState } from 'react';\n// import Calendar from 'react-calendar'; // Assuming you're using the 'react-calendar' library\n\n// const OrderCalendar = () => {\n//     // Define state for the selected date\n//     const [selectedDate, setSelectedDate] = useState(new Date());\n\n//     // Define a function to handle date selection\n//     const handleDateChange = (date) => {\n//         setSelectedDate(date);\n//     };\n\n//     // Sample orders data - Replace this with your actual orders data\n//     const orders = [\n//         { id: 1, customer: 'Customer 1', date: new Date(2022, 10, 15), status: 'Pending' },\n//         { id: 2, customer: 'Customer 2', date: new Date(2022, 10, 16), status: 'Shipped' },\n//         { id: 3, customer: 'Customer 3', date: new Date(2022, 10, 17), status: 'Delivered' },\n//     ];\n\n//     // Filter orders based on selected date\n//     const filteredOrders = orders.filter(order => order.date.getDate() === selectedDate.getDate());\n\n//     return (\n//         <div className=\"order-calendar\">\n//             <h2 className=\"calendar-heading\"style={{ display: 'block', margin: '20px auto' }}>Orders Calendar</h2>\n//             <div className=\"calendar-container\">\n//                 {/* Calendar component */}\n//                 <Calendar\n//                     onChange={handleDateChange}\n//                     value={selectedDate}\n//                 />\n//             </div>\n//             <div className=\"orders-list\">\n//                 {/* Display filtered orders */}\n//                 {filteredOrders.length > 0 ? (\n//                     <ul>\n//                         {filteredOrders.map(order => (\n//                             <li key={order.id}>\n//                                 <div>Customer: {order.customer}</div>\n//                                 <div>Date: {order.date.toDateString()}</div>\n//                                 <div>Status: {order.status}</div>\n//                             </li>\n//                         ))}\n//                     </ul>\n//                 ) : (\n//                     <p style={{ textAlign:\"center\", margin: '20px auto' }}> No orders for selected date.</p>\n//                 )}\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default OrderCalendar;\n\n// import React, { useState } from 'react';\n// import Calendar from 'react-calendar'; // Assuming you're using the 'react-calendar' library\n\n// const OrderCalendar = () => {\n//     // Define state for the selected date\n//     const [selectedDate, setSelectedDate] = useState(new Date());\n\n//     // Define a function to handle date selection\n//     const handleDateChange = (date) => {\n//         setSelectedDate(date);\n//     };\n\n//     // Sample orders data - Replace this with your actual orders data\n//     const orders = [\n//         { id: 1, customer: 'Customer 1', date: new Date(2022, 10, 15), status: 'Pending' },\n//         { id: 2, customer: 'Customer 2', date: new Date(2022, 10, 16), status: 'Shipped' },\n//         { id: 3, customer: 'Customer 3', date: new Date(2022, 10, 17), status: 'Delivered' },\n//     ];\n\n//     // Filter orders based on selected date\n//     const filteredOrders = orders.filter(order => order.date.getDate() === selectedDate.getDate());\n\n//     return (\n//         <div className=\"order-calendar\">\n//             <h2 className=\"calendar-heading\">Orders Calendar</h2>\n//             <div className=\"calendar-container\">\n//                 {/* Calendar component */}\n//                 <Calendar\n//                     onChange={handleDateChange}\n//                     value={selectedDate}\n//                 />\n//             </div>\n//             <div className=\"orders-list\">\n//                 {/* Display filtered orders */}\n//                 {filteredOrders.length > 0 ? (\n//                     <ul>\n//                         {filteredOrders.map(order => (\n//                             <li key={order.id}>\n//                                 <div>Customer: {order.customer}</div>\n//                                 <div>Date: {order.date.toDateString()}</div>\n//                                 <div>Status: {order.status}</div>\n//                             </li>\n//                         ))}\n//                     </ul>\n//                 ) : (\n//                     <p>No orders for selected date.</p>\n//                 )}\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default OrderCalendar;\n\n// import React, { useState } from 'react';\n// import Calendar from 'react-calendar'; // Assuming you're using the 'react-calendar' library\n\n// const OrderCalendar = () => {\n//     // Define state for the selected date\n//     const [selectedDate, setSelectedDate] = useState(new Date());\n\n//     // Define a function to handle date selection\n//     const handleDateChange = (date) => {\n//         setSelectedDate(date);\n//     };\n\n//     // Sample orders data - Replace this with your actual orders data\n//     const orders = [\n//         { id: 1, customer: 'Customer 1', date: new Date(2022, 10, 15), status: 'Pending' },\n//         { id: 2, customer: 'Customer 2', date: new Date(2022, 10, 16), status: 'Shipped' },\n//         { id: 3, customer: 'Customer 3', date: new Date(2022, 10, 17), status: 'Delivered' },\n//     ];\n\n//     // Filter orders based on selected date\n//     const filteredOrders = orders.filter(order => order.date.getDate() === selectedDate.getDate());\n\n//     // Determine if orders are delivered for the selected date\n//     const areOrdersDelivered = filteredOrders.some(order => order.status === 'Delivered');\n\n//     return (\n//         <div className=\"order-calendar\">\n//             <h2 className=\"calendar-heading\">Orders Calendar</h2>\n//             <div className=\"calendar-container\">\n//                 {/* Calendar component */}\n//                 <Calendar\n//                     onChange={handleDateChange}\n//                     value={selectedDate}\n//                 />\n//             </div>\n//             <div className=\"orders-list\">\n//                 {/* Display message indicating whether orders are delivered or not */}\n//                 {areOrdersDelivered ? (\n//                     <p>Orders for {selectedDate.toDateString()} are delivered.</p>\n//                 ) : (\n//                     <p>No orders for {selectedDate.toDateString()} are delivered.</p>\n//                 )}\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default OrderCalendar;\n\n// Calendar.js\n\n// import React, { useState } from 'react';\n// import Calendar from 'react-calendar';\n// import 'react-calendar/dist/Calendar.css';\n// import './Calendar.css';\n\n// const OrderCalendar = () => {\n//   const [selectedDate, setSelectedDate] = useState(null);\n//   const [orders] = useState([\n//     { id: 1, date: '2024-01-09', status: 'Delivered' },\n//     { id: 2, date: '2024-01-09', status: 'Shipped' },\n//     { id: 3, date: '2024-01-10', status: 'Delivered' },\n//   ]);\n\n//   const handleDateChange = date => {\n//     setSelectedDate(date);\n//   };\n\n//   const filteredOrders = selectedDate\n//     ? orders.filter(order => order.date === selectedDate.toISOString().split('T')[0])\n//     : [];\n\n//   return (\n//     <div className=\"order-calendar\">\n//       <h2 className=\"calendar-heading\">Orders Calendar</h2>\n//       <div className=\"calendar-container\">\n//         <Calendar onChange={handleDateChange} value={selectedDate} />\n//       </div>\n//       <div className=\"orders-list\">\n//         {selectedDate ? (\n//           filteredOrders.length > 0 ? (\n//             <ul>\n//               {filteredOrders.map(order => (\n//                 <li key={order.id}>{order.status} order</li>\n//               ))}\n//             </ul>\n//           ) : (\n//             <p>No orders for {selectedDate.toDateString()} are delivered.</p>\n//           )\n//         ) : (\n//           <p style={{ textAlign:\"center\", margin: '20px auto' }}>No date selected</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default OrderCalendar;\n\n// import React, { useState } from 'react';\n// import Calendar from 'react-calendar';\n// import 'react-calendar/dist/Calendar.css';\n\n// const OrderCalendar = () => {\n//   const [selectedDate, setSelectedDate] = useState(null);\n//   const orders = [\n//     { id: 1, date: '2024-03-12', status: 'Delivered' },\n//     { id: 2, date: '2024-03-12', status: 'Shipped' },\n//     { id: 3, date: '2024-03-13', status: 'Delivered' },\n//   ];\n\n//   const handleDateChange = (date) => {\n//     setSelectedDate(date);\n//   };\n\n//   const getOrdersForDate = (date) => {\n//     return orders.filter((order) => order.date === date);\n//   };\n\n//   const renderOrdersForDate = () => {\n//     if (!selectedDate) {\n//       return 'Select a date to view orders.';\n//     }\n\n//     const ordersForDate = getOrdersForDate(selectedDate.toISOString().split('T')[0]);\n//     if (ordersForDate.length === 0) {\n//       return `No orders for ${selectedDate.toDateString()} are delivered.`;\n//     }\n\n//     return ordersForDate.map((order) => (\n//       <div key={order.id}>{`Order ${order.id}: ${order.status}`}</div>\n//     ));\n//   };\n\n//   return (\n//     <div>\n//       <h2 style={{ textAlign:\"center\", margin: '20px auto' }}>Orders Calendar</h2>\n//       <div>\n//         <Calendar onChange={handleDateChange}  value={selectedDate} />\n//       </div>\n//       <div>{renderOrdersForDate()}</div>\n//     </div>\n//   );\n// };\n\n// export default OrderCalendar;\n\n// Calendar.js\n\n// import React, { useState } from 'react';\n// import Calendar from 'react-calendar';\n// import 'react-calendar/dist/Calendar.css';\n// import './Calendar.css'; // Import calendar styles\n\n// const OrderCalendar = () => {\n//   const [selectedDate, setSelectedDate] = useState(null);\n\n//   const handleDateChange = (date) => {\n//     setSelectedDate(date);\n//   };\n\n//   return (\n//     <div className=\"order-calendar\">\n//       <div className=\"calendar-content\">\n//         <h2 className=\"calendar-heading\">Orders Calendar</h2>\n//         <div className=\"calendar-container\">\n//           <Calendar onChange={handleDateChange} value={selectedDate} />\n//         </div>\n//         <div className=\"orders-list\">\n//           {/* Render orders list here */}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default OrderCalendar;\n\n// Calendar.js\n\nimport React, { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport './Calendar.css'; // Import calendar styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderCalendar = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(null);\n  const orders = [{\n    id: 1,\n    date: '2024-03-12',\n    status: 'Delivered'\n  }, {\n    id: 2,\n    date: '2024-03-12',\n    status: 'Shipped'\n  }, {\n    id: 3,\n    date: '2024-03-13',\n    status: 'Delivered'\n  }];\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n  const getOrdersForDate = date => {\n    return orders.filter(order => order.date === date);\n  };\n  const renderOrdersForDate = () => {\n    if (!selectedDate) {\n      return 'Select a date to view orders.';\n    }\n    const ordersForDate = getOrdersForDate(selectedDate.toISOString().split('T')[0]);\n    if (ordersForDate.length === 0) {\n      return `No orders for ${selectedDate.toDateString()} are delivered.`;\n    }\n    return ordersForDate.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: `Order ${order.id}: ${order.status}`\n    }, order.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"order-calendar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"calendar-heading\",\n        children: \"Orders Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-container\",\n        children: /*#__PURE__*/_jsxDEV(Calendar, {\n          onChange: handleDateChange,\n          value: selectedDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"orders-list\",\n        children: renderOrdersForDate()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 357,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderCalendar, \"rhrbPH1/NtfhiyDl62tZ0yGffOM=\");\n_c = OrderCalendar;\nexport default OrderCalendar;\nvar _c;\n$RefreshReg$(_c, \"OrderCalendar\");","map":{"version":3,"names":["React","useState","Calendar","jsxDEV","_jsxDEV","OrderCalendar","_s","selectedDate","setSelectedDate","orders","id","date","status","handleDateChange","getOrdersForDate","filter","order","renderOrdersForDate","ordersForDate","toISOString","split","length","toDateString","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","value","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/ERP-System-with-React-No-Backend/Simplified-ERP-System-with-React-No-Backend--main/src/Components/Calendar.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import Calendar from 'react-calendar';\r\n// import './Calendar.css'; // Import Calendar component CSS\r\n\r\n// function OrdersCalendar() {\r\n//     const [date, setDate] = useState(new Date());\r\n\r\n//     const handleDateChange = date => {\r\n//         setDate(date);\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"calendar-container\">\r\n//             <div className=\"calendar-header\">\r\n//                 <h2>Orders Calendar View</h2>\r\n//             </div>\r\n//             <Calendar\r\n//                 onChange={handleDateChange}\r\n//                 value={date}\r\n//             />\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default OrdersCalendar;\r\n\r\n// import React, { useState } from 'react';\r\n// import Calendar from 'react-calendar'; // Assuming you're using the 'react-calendar' library\r\n\r\n// const OrderCalendar = () => {\r\n//     // Define state for the selected date\r\n//     const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n//     // Define a function to handle date selection\r\n//     const handleDateChange = (date) => {\r\n//         setSelectedDate(date);\r\n//     };\r\n\r\n//     // Sample orders data - Replace this with your actual orders data\r\n//     const orders = [\r\n//         { id: 1, customer: 'Customer 1', date: new Date(2022, 10, 15), status: 'Pending' },\r\n//         { id: 2, customer: 'Customer 2', date: new Date(2022, 10, 16), status: 'Shipped' },\r\n//         { id: 3, customer: 'Customer 3', date: new Date(2022, 10, 17), status: 'Delivered' },\r\n//     ];\r\n\r\n//     // Filter orders based on selected date\r\n//     const filteredOrders = orders.filter(order => order.date.getDate() === selectedDate.getDate());\r\n\r\n//     return (\r\n//         <div className=\"order-calendar\">\r\n//             <h2 className=\"calendar-heading\"style={{ display: 'block', margin: '20px auto' }}>Orders Calendar</h2>\r\n//             <div className=\"calendar-container\">\r\n//                 {/* Calendar component */}\r\n//                 <Calendar\r\n//                     onChange={handleDateChange}\r\n//                     value={selectedDate}\r\n//                 />\r\n//             </div>\r\n//             <div className=\"orders-list\">\r\n//                 {/* Display filtered orders */}\r\n//                 {filteredOrders.length > 0 ? (\r\n//                     <ul>\r\n//                         {filteredOrders.map(order => (\r\n//                             <li key={order.id}>\r\n//                                 <div>Customer: {order.customer}</div>\r\n//                                 <div>Date: {order.date.toDateString()}</div>\r\n//                                 <div>Status: {order.status}</div>\r\n//                             </li>\r\n//                         ))}\r\n//                     </ul>\r\n//                 ) : (\r\n//                     <p style={{ textAlign:\"center\", margin: '20px auto' }}> No orders for selected date.</p>\r\n//                 )}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default OrderCalendar;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import Calendar from 'react-calendar'; // Assuming you're using the 'react-calendar' library\r\n\r\n// const OrderCalendar = () => {\r\n//     // Define state for the selected date\r\n//     const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n//     // Define a function to handle date selection\r\n//     const handleDateChange = (date) => {\r\n//         setSelectedDate(date);\r\n//     };\r\n\r\n//     // Sample orders data - Replace this with your actual orders data\r\n//     const orders = [\r\n//         { id: 1, customer: 'Customer 1', date: new Date(2022, 10, 15), status: 'Pending' },\r\n//         { id: 2, customer: 'Customer 2', date: new Date(2022, 10, 16), status: 'Shipped' },\r\n//         { id: 3, customer: 'Customer 3', date: new Date(2022, 10, 17), status: 'Delivered' },\r\n//     ];\r\n\r\n//     // Filter orders based on selected date\r\n//     const filteredOrders = orders.filter(order => order.date.getDate() === selectedDate.getDate());\r\n\r\n//     return (\r\n//         <div className=\"order-calendar\">\r\n//             <h2 className=\"calendar-heading\">Orders Calendar</h2>\r\n//             <div className=\"calendar-container\">\r\n//                 {/* Calendar component */}\r\n//                 <Calendar\r\n//                     onChange={handleDateChange}\r\n//                     value={selectedDate}\r\n//                 />\r\n//             </div>\r\n//             <div className=\"orders-list\">\r\n//                 {/* Display filtered orders */}\r\n//                 {filteredOrders.length > 0 ? (\r\n//                     <ul>\r\n//                         {filteredOrders.map(order => (\r\n//                             <li key={order.id}>\r\n//                                 <div>Customer: {order.customer}</div>\r\n//                                 <div>Date: {order.date.toDateString()}</div>\r\n//                                 <div>Status: {order.status}</div>\r\n//                             </li>\r\n//                         ))}\r\n//                     </ul>\r\n//                 ) : (\r\n//                     <p>No orders for selected date.</p>\r\n//                 )}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default OrderCalendar;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import Calendar from 'react-calendar'; // Assuming you're using the 'react-calendar' library\r\n\r\n// const OrderCalendar = () => {\r\n//     // Define state for the selected date\r\n//     const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n//     // Define a function to handle date selection\r\n//     const handleDateChange = (date) => {\r\n//         setSelectedDate(date);\r\n//     };\r\n\r\n//     // Sample orders data - Replace this with your actual orders data\r\n//     const orders = [\r\n//         { id: 1, customer: 'Customer 1', date: new Date(2022, 10, 15), status: 'Pending' },\r\n//         { id: 2, customer: 'Customer 2', date: new Date(2022, 10, 16), status: 'Shipped' },\r\n//         { id: 3, customer: 'Customer 3', date: new Date(2022, 10, 17), status: 'Delivered' },\r\n//     ];\r\n\r\n//     // Filter orders based on selected date\r\n//     const filteredOrders = orders.filter(order => order.date.getDate() === selectedDate.getDate());\r\n\r\n//     // Determine if orders are delivered for the selected date\r\n//     const areOrdersDelivered = filteredOrders.some(order => order.status === 'Delivered');\r\n\r\n//     return (\r\n//         <div className=\"order-calendar\">\r\n//             <h2 className=\"calendar-heading\">Orders Calendar</h2>\r\n//             <div className=\"calendar-container\">\r\n//                 {/* Calendar component */}\r\n//                 <Calendar\r\n//                     onChange={handleDateChange}\r\n//                     value={selectedDate}\r\n//                 />\r\n//             </div>\r\n//             <div className=\"orders-list\">\r\n//                 {/* Display message indicating whether orders are delivered or not */}\r\n//                 {areOrdersDelivered ? (\r\n//                     <p>Orders for {selectedDate.toDateString()} are delivered.</p>\r\n//                 ) : (\r\n//                     <p>No orders for {selectedDate.toDateString()} are delivered.</p>\r\n//                 )}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default OrderCalendar;\r\n\r\n\r\n// Calendar.js\r\n\r\n// import React, { useState } from 'react';\r\n// import Calendar from 'react-calendar';\r\n// import 'react-calendar/dist/Calendar.css';\r\n// import './Calendar.css';\r\n\r\n// const OrderCalendar = () => {\r\n//   const [selectedDate, setSelectedDate] = useState(null);\r\n//   const [orders] = useState([\r\n//     { id: 1, date: '2024-01-09', status: 'Delivered' },\r\n//     { id: 2, date: '2024-01-09', status: 'Shipped' },\r\n//     { id: 3, date: '2024-01-10', status: 'Delivered' },\r\n//   ]);\r\n\r\n//   const handleDateChange = date => {\r\n//     setSelectedDate(date);\r\n//   };\r\n\r\n//   const filteredOrders = selectedDate\r\n//     ? orders.filter(order => order.date === selectedDate.toISOString().split('T')[0])\r\n//     : [];\r\n\r\n//   return (\r\n//     <div className=\"order-calendar\">\r\n//       <h2 className=\"calendar-heading\">Orders Calendar</h2>\r\n//       <div className=\"calendar-container\">\r\n//         <Calendar onChange={handleDateChange} value={selectedDate} />\r\n//       </div>\r\n//       <div className=\"orders-list\">\r\n//         {selectedDate ? (\r\n//           filteredOrders.length > 0 ? (\r\n//             <ul>\r\n//               {filteredOrders.map(order => (\r\n//                 <li key={order.id}>{order.status} order</li>\r\n//               ))}\r\n//             </ul>\r\n//           ) : (\r\n//             <p>No orders for {selectedDate.toDateString()} are delivered.</p>\r\n//           )\r\n//         ) : (\r\n//           <p style={{ textAlign:\"center\", margin: '20px auto' }}>No date selected</p>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default OrderCalendar;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import Calendar from 'react-calendar';\r\n// import 'react-calendar/dist/Calendar.css';\r\n\r\n// const OrderCalendar = () => {\r\n//   const [selectedDate, setSelectedDate] = useState(null);\r\n//   const orders = [\r\n//     { id: 1, date: '2024-03-12', status: 'Delivered' },\r\n//     { id: 2, date: '2024-03-12', status: 'Shipped' },\r\n//     { id: 3, date: '2024-03-13', status: 'Delivered' },\r\n//   ];\r\n\r\n//   const handleDateChange = (date) => {\r\n//     setSelectedDate(date);\r\n//   };\r\n\r\n//   const getOrdersForDate = (date) => {\r\n//     return orders.filter((order) => order.date === date);\r\n//   };\r\n\r\n//   const renderOrdersForDate = () => {\r\n//     if (!selectedDate) {\r\n//       return 'Select a date to view orders.';\r\n//     }\r\n\r\n//     const ordersForDate = getOrdersForDate(selectedDate.toISOString().split('T')[0]);\r\n//     if (ordersForDate.length === 0) {\r\n//       return `No orders for ${selectedDate.toDateString()} are delivered.`;\r\n//     }\r\n\r\n//     return ordersForDate.map((order) => (\r\n//       <div key={order.id}>{`Order ${order.id}: ${order.status}`}</div>\r\n//     ));\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2 style={{ textAlign:\"center\", margin: '20px auto' }}>Orders Calendar</h2>\r\n//       <div>\r\n//         <Calendar onChange={handleDateChange}  value={selectedDate} />\r\n//       </div>\r\n//       <div>{renderOrdersForDate()}</div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default OrderCalendar;\r\n\r\n// Calendar.js\r\n\r\n// import React, { useState } from 'react';\r\n// import Calendar from 'react-calendar';\r\n// import 'react-calendar/dist/Calendar.css';\r\n// import './Calendar.css'; // Import calendar styles\r\n\r\n// const OrderCalendar = () => {\r\n//   const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n//   const handleDateChange = (date) => {\r\n//     setSelectedDate(date);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"order-calendar\">\r\n//       <div className=\"calendar-content\">\r\n//         <h2 className=\"calendar-heading\">Orders Calendar</h2>\r\n//         <div className=\"calendar-container\">\r\n//           <Calendar onChange={handleDateChange} value={selectedDate} />\r\n//         </div>\r\n//         <div className=\"orders-list\">\r\n//           {/* Render orders list here */}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default OrderCalendar;\r\n\r\n\r\n// Calendar.js\r\n\r\nimport React, { useState } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport './Calendar.css'; // Import calendar styles\r\n\r\nconst OrderCalendar = () => {\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const orders = [\r\n    { id: 1, date: '2024-03-12', status: 'Delivered' },\r\n    { id: 2, date: '2024-03-12', status: 'Shipped' },\r\n    { id: 3, date: '2024-03-13', status: 'Delivered' },\r\n  ];\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const getOrdersForDate = (date) => {\r\n    return orders.filter((order) => order.date === date);\r\n  };\r\n\r\n  const renderOrdersForDate = () => {\r\n    if (!selectedDate) {\r\n      return 'Select a date to view orders.';\r\n    }\r\n\r\n    const ordersForDate = getOrdersForDate(selectedDate.toISOString().split('T')[0]);\r\n    if (ordersForDate.length === 0) {\r\n      return `No orders for ${selectedDate.toDateString()} are delivered.`;\r\n    }\r\n\r\n    return ordersForDate.map((order) => (\r\n      <div key={order.id}>{`Order ${order.id}: ${order.status}`}</div>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"order-calendar\">\r\n      <div className=\"calendar-content\">\r\n        <h2 className=\"calendar-heading\">Orders Calendar</h2>\r\n        <div className=\"calendar-container\">\r\n          <Calendar onChange={handleDateChange} value={selectedDate} />\r\n        </div>\r\n        <div className=\"orders-list\">\r\n          {renderOrdersForDate()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderCalendar;\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}